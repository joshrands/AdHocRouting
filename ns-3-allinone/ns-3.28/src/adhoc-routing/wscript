# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('adhoc-routing', ['core'])
    module.source = [
				'model/aodv.cc',
				'model/aodv_rerr.cc',
				'model/aodv_routing_table.cc',
				'model/aodv_rrep.cc',
				'model/aodv_rreq.cc',
				'model/aodv_sim.cc',
				'model/hello_monitor.cc',
				'model/hello_sim.cc',
				'model/network_monitor.cc',
				'model/packet_buffer.cc',
				'model/port.cc',
				'model/rem.cc',
				'model/rem_model.cc',
				'model/rem_sim.cc',
				'model/routing_protocol.cc',
        'helper/adhoc-routing-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('adhoc-routing')
    module_test.source = [
        'test/adhoc-routing-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'adhoc-routing'
    headers.source = [
 				'model/defines.h',
				'model/adhoc_defines.h',
				'model/adhoc_structs.h',
				'model/aodv_defines.h',
				'model/aodv.h',
				'model/aodv_packets.h',
				'model/aodv_params.h',
				'model/aodv_rerr.h',
				'model/aodv_routing_table.h',
				'model/aodv_rrep.h',
				'model/aodv_rreq.h',
				'model/aodv_sim.h',
				'model/defines.h',
				'model/hello_monitor.h',
				'model/hello_sim.h',
				'model/hello_defines.h',
				'model/monitor_info.h',
				'model/network_monitor.h',
				'model/packet_buffer.h',
				'model/port.h',
				'model/rem_defines.h',
				'model/rem.h',
				'model/rem_sim.h',
				'model/rem_model.h',
				'model/rem_parameters.h',
				'model/rem_packet.h',
				'model/routing_protocol.h',
        'helper/adhoc-routing-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

